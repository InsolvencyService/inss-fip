parameters:
  - name: environment
    type: string
    default: Dev
  - name: location
    type: string
    default: 'uksouth'
  - name: azureSubscription
    type: string
    default: 'AppServicesDevOps-NonProd'
  - name: method
    type: string
    default: 'GET'
  - name: retries
    type: number
    default: 5
  - name: secondsDelay
    type: number
    default: 10
  - name: timeoutSec
    type: number
    default: 120
  - name: appZipFile
    type: string
    default: 'INSS.FIP.Web.zip'
  - name: funcZipFile
    type: string
    default: 'INSS.FIP.Functions.zip'

jobs:
  - deployment: 
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: Azure Web App Deploy
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: ${{ parameters.azureSubscription }}
              appType: 'webApp'
              WebAppName: 'app-fip-frontend-${{ lower(parameters.environment) }}'
              deployToSlotOrASE: true
              resourceGroupName: 'rg-fip-${{ lower(parameters.environment) }}'
              slotName: 'staging'
              package: '$(Pipeline.Workspace)/**/${{ parameters.appZipFile }}'
              appSettings: >
                -PhaseBanner "$(phaseBanner)"
                -EnvironmentBanner "${{ parameters.environment }}" 
                -EnvironmentBannerText "$(EnvironmentBannerText)"
                -FipApiConnectorClientOptions__BaseAddress "$(FipApiConnectorClientOptions__BaseAddress)"
                -APPLICATIONINSIGHTS_CONNECTION_STRING "$(appInsightsConnectionString)"

          - task: AzureAppServiceManage@0
            displayName: Start Staging Slot
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              Action: 'Start Azure App Service'
              WebAppName: 'app-fip-frontend-${{ lower(parameters.environment) }}'
              ResourceGroupName:  'rg-fip-${{ lower(parameters.environment) }}'
              SpecifySlotOrASE: true
              Slot: 'staging'

          - checkout: inss-devops-common-lib

          - task: PowerShell@2
            displayName: 'Performing Health Check - Staging'    
            inputs:
              failOnStderr: true
              targetType: 'filePath'
              filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
              arguments: > # Use this to avoid newline characters in multi-line string
                -URI "https://app-${{ parameters.location }}-${{ lower(parameters.environment) }}-fip-frontend-staging.azurewebsites.net/health/ping"
                -Method "${{ parameters.method }}"
                -Retries ${{ parameters.retries }}
                -SecondsDelay ${{ parameters.secondsDelay }}
                -TimeoutSec ${{ parameters.timeoutSec }} 
            
          - task: AzureAppServiceManage@0
            displayName: Swap Staging Slot into Production
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              Action: 'Swap Slots'
              WebAppName: 'app-fip-frontend-${{ lower(parameters.environment) }}'
              ResourceGroupName:  'rg-fip-${{ lower(parameters.environment) }}'
              SourceSlot: 'staging'
              SwapWithProduction: true

          - task: PowerShell@2
            displayName: 'Performing Health Check - Production'    
            inputs:
              failOnStderr: true
              targetType: 'filePath'
              filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
              arguments: > # Use this to avoid newline characters in multi-line string
                -URI "https://app-${{ parameters.location }}-${{ lower(parameters.environment) }}-fip-frontend.azurewebsites.net/health/ping"
                -Method "${{ parameters.method }}"
                -Retries ${{ parameters.retries }}
                -SecondsDelay ${{ parameters.secondsDelay }}
                -TimeoutSec ${{ parameters.timeoutSec }} 

          - task: AzureAppServiceManage@0
            displayName: Stop Staging Slot
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              Action: 'Stop Azure App Service'
              WebAppName: 'app-fip-frontend-${{ lower(parameters.environment) }}'
              ResourceGroupName:  'rg-fip-${{ lower(parameters.environment) }}'             
              SpecifySlotOrASE: true
              Slot: 'staging'

  - deployment: 
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            displayName: Azure Function App Deploy
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              appType: 'functionApp'
              appName: 'func-fip-backend-${{ lower(parameters.environment) }}'
              deployToSlotOrASE: true
              resourceGroupName:  'rg-fip-${{ lower(parameters.environment) }}'
              slotName: 'staging'
              package: '$(Pipeline.Workspace)/**/${{ parameters.funcZipFile }}'

          - task: AzureAppServiceSettings@1
              displayName: Apply App Service Settings
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                appName: 'func-fip-backend-${{ lower(parameters.environment) }}'
                slotName: 'staging'
                appSettings: |
                  [
                    {
                      "name": "iirwebdbContextConnectionString",
                      "value": "$(iirwebdbContextConnectionString)",
                      "slotSetting": false
                    },
                    {
                      "name": "OpenApi__Version",
                      "value": "$(OpenApi__Version)",
                      "slotSetting": false
                    },
                    {
                      "name": "OpenApi__DocVersion",
                      "value": "$(OpenApi__DocVersion)",
                      "slotSetting": false
                    },
                    {
                      "name": "OpenApi__DocTitle",
                      "value": "$(OpenApi__DocTitle)",
                      "slotSetting": false
                    },
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "$(appInsightsConnectionString)",
                      "slotSetting": false
                    }
                  ]
                    
          - task: AzureAppServiceManage@0
            displayName: Start Staging Slot
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              Action: 'Start Azure App Service'
              WebAppName: 'func-fip-backend-${{ lower(parameters.environment) }}'
              ResourceGroupName: 'rg-fip-${{ lower(parameters.environment) }}'             
              SpecifySlotOrASE: true
              Slot: 'staging'

          - checkout: inss-devops-common-lib

          #- task: PowerShell@2
          #  displayName: 'Performing Health Check - Staging'
          #  inputs:
          #    failOnStderr: true
          #    targetType: 'filePath'
          #    filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
          #    arguments: > # Use this to avoid newline characters in multi-line string
          #      -URI "https://func-${{ parameters.location }}-${{ lower(parameters.environment) }}-fip-backend-staging.azurewebsites.net/api/health/ping"
          #      -Method "${{ parameters.method }}"
          #      -Retries ${{ parameters.retries }}
          #      -SecondsDelay ${{ parameters.secondsDelay }}
          #      -TimeoutSec ${{ parameters.timeoutSec }}

          - task: AzureAppServiceManage@0
            displayName: Swap Staging Slot into Production
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              Action: 'Swap Slots'
              WebAppName: 'func-fip-backend-${{ lower(parameters.environment) }}'
              ResourceGroupName:  'rg-fip-${{ lower(parameters.environment) }}'
              SourceSlot: 'staging'
              SwapWithProduction: true

          #- task: PowerShell@2
          #  displayName: 'Performing Health Check - Production'
          #  inputs:
          #    failOnStderr: true
          #    targetType: 'filePath'
          #    filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
          #    arguments: > # Use this to avoid newline characters in multi-line string
          #      -URI "https://func-${{ parameters.location }}-${{ lower(parameters.environment) }}-fip-backend.azurewebsites.net/api/health/ping"
          #      -Method "${{ parameters.method }}"
          #      -Retries ${{ parameters.retries }}
          #      -SecondsDelay ${{ parameters.secondsDelay }}
          #      -TimeoutSec ${{ parameters.timeoutSec }}

          - task: AzureAppServiceManage@0
            displayName: Stop Staging Slot
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              Action: 'Stop Azure App Service'
              WebAppName: 'func-fip-backend-${{ lower(parameters.environment) }}'
              ResourceGroupName:  'rg-fip-${{ lower(parameters.environment) }}'             
              SpecifySlotOrASE: true
              Slot: 'staging'
